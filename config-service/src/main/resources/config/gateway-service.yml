server:
  port: 8091
spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI:http://localhost:9082/realms/spring-boot}
          jwk-set-uri: ${SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI:http://localhost:9082/realms/spring-boot/protocol/openid-connect/certs}
  reactor:
    context-propagation: auto
eureka:
  instance:
    prefer-ip-address: true
    hostname: localhost
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://localhost:8093/eureka}
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 5
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    io.opentelemetry: DEBUG
management:
  endpoints:
    web:
      exposure:
        include: "*"
    enabled-by-default: true
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    config-url: /v3/api-docs/swagger-config
    urls:
      - url: /book-service-docs/v3/api-docs
        name: Book Service
      - url: /library-service-docs/v3/api-docs
        name: Library Service
      - url: /keycloak-auth-service-docs/v3/api-docs
        name: Keycloak Service
otel:
  exporter:
    otlp:
      logs:
        protocol: grpc
        endpoint: ${OTEL_EXPORTER_OTLP_LOGS_ENDPOINT:http://localhost:4317}
      traces:
        protocol: grpc
        endpoint: ${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:http://localhost:4317}
      metrics:
        protocol: grpc
        endpoint: ${OTEL_EXPORTER_OTLP_METRICS_ENDPOINT:http://localhost:4317}
      endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:http://localhost:4317}
  resource:
    attributes:
      service.name: gateway-service
      service: gateway-service
      env: dev